"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const wait_1 = __importDefault(require("../wait"));
const chai_1 = __importDefault(require("chai"));
const chai_as_promised_1 = __importDefault(require("chai-as-promised"));
chai_1.default.use(chai_as_promised_1.default);
const expect = chai_1.default.expect;
const promiseQueue_1 = __importDefault(require("../promiseQueue"));
describe("Promise Queue", function () {
    it("On empty queue", async function () {
        await promiseQueue_1.default([], { concurrent: 2 });
    });
    it("Queue where size is less than concurrency", async function () {
        await promiseQueue_1.default([
            async () => {
                await wait_1.default(10);
            },
            async () => {
                await wait_1.default(10);
            },
        ], { concurrent: 4 });
    });
    it("Queue where size is larger than concurrency", async function () {
        const result = await promiseQueue_1.default([
            async () => {
                await wait_1.default(10);
            },
            async () => {
                await wait_1.default(10);
            },
        ], { concurrent: 1 });
        expect(result).to.have.lengthOf(2);
    });
    it("Queue where one fails", async function () {
        await expect(promiseQueue_1.default([
            async () => {
                await wait_1.default(10);
            },
            async () => {
                await wait_1.default(10);
            },
            async () => {
                throw new Error("something");
            },
        ], { concurrent: 2 })).eventually.rejectedWith("something");
    });
});
//# sourceMappingURL=promiseQueue-test.js.map