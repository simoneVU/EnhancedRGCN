"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getEnvironmentVarsAsObject = void 0;
const lodash_1 = require("lodash");
function getEnvironmentVarsAsObject(envPrefix) {
    if (!process.env || lodash_1.size(process.env) === 0) {
        console.trace("WARNING: No environment variables set, running config generation on client? Config cannot be overwritten by env");
        return;
    }
    var autocast = require("autocast");
    var values = {};
    for (var envKey in process.env) {
        if (lodash_1.startsWith(envKey, envPrefix)) {
            var val = autocast(process.env[envKey]);
            envKey = envKey.substring(envPrefix.length);
            lodash_1.set(values, lodash_1.map(envKey.split("__"), lodash_1.camelCase), val);
        }
    }
    return values;
}
exports.getEnvironmentVarsAsObject = getEnvironmentVarsAsObject;
class Config {
    constructor(envVarPrefix) {
        this.envVarPrefix = "TRIPLY__";
        this.isDevelopment = process.env.NODE_ENV !== "production";
        if (envVarPrefix)
            this.envVarPrefix = envVarPrefix;
        this.validateEnvVariables();
        this.setFromEnvironment();
        this.setDefaults();
        this.setFromEnvironment();
        this.postProcess();
    }
    setFromEnvironment() {
        lodash_1.merge(this, getEnvironmentVarsAsObject(this.envVarPrefix));
    }
}
exports.default = Config;
//# sourceMappingURL=ConfigTemplate.js.map