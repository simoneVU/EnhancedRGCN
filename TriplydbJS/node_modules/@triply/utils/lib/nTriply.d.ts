/// <reference types="node" />
import * as N3 from "n3";
import * as RdfJs from "rdf-js";
export declare type Statements = Statement[];
import * as stream from "stream";
export declare type Statement = [Term, Term, Term, Term] | [Term, Term, Term];
export interface Term {
    termType: "NamedNode" | "BlankNode" | "Literal";
    value: string;
    language?: string;
    datatype?: string;
}
export declare function rdfjsToNtriply(n3Statement: RdfJs.Quad): Statement;
export declare function ntriplyToN3Term(term: Term): N3.Term;
export declare function ntriplyToN3(triplyStatement: Statement): N3.Quad;
export declare function ntriplyToNquads(statements: Statements): Promise<string>;
export declare function rdfjsToNtriplyStream(): stream.Transform;
