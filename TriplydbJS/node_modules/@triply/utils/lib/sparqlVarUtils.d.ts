import * as Models from "./Models";
export declare function getParser(): import("sparqljs").SparqlParser;
export declare function getGenerator(): import("sparqljs").SparqlGenerator;
export declare const REGEX_REPLACE_STRING_DATATYPE: RegExp;
export declare class BadArgumentsError extends Error {
    constructor(message: string);
}
export interface Options {
    variableDefinitions: Models.VariableConfig[];
    variableValues: {
        [variableName: string]: string | undefined;
    };
    page?: number;
    pageSize?: number;
}
interface QueryInfo {
    query: string;
    isConstructQuery?: boolean;
    limit?: number;
    offset?: number;
}
export declare function parseAndInjectVariablesIntoQueryAndGetInfo(query: string, opts: Options): QueryInfo;
export declare function parseAndInjectVariablesIntoQuery(query: string, opts: Options): string;
export declare function filterSuggestions(forVariableConfiguration: Models.VariableConfig, suggestions: string[]): string[];
export {};
