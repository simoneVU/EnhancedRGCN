import { SpawnSyncReturns, execSync } from "child_process";

export function isCleanBranchOrExit() {
  try {
    const gitStatus = execSync("git status --porcelain --untracked-files=no .", { stdio: "pipe" }).toString().trim();
    if (gitStatus.length > 0) {
      console.error("Dirty repository, first commit/push or stash all changes");
      process.exit(1);
    }
  } catch (e) {
    printExecSyncError(e);
    process.exit(1);
  }
}
export function printExecSyncError(e: Error & SpawnSyncReturns<string>) {
  console.error(`Command failed with code ${e.status}`);
  console.error(`Message: ${e.message}`);
  if (e.stdout) {
    console.error(
      e.stdout
        .toString()
        .split("\n")
        .map((l) => `stdout: ${l}`)
        .join("\n")
    );
  }
  if (e.stderr) {
    console.error(
      e.stderr
        .toString()
        .split("\n")
        .map((l) => `stderr: ${l}`)
        .join("\n")
    );
  }

  if (!e.stdout && !e.stderr) {
    console.error(e);
  }
}
