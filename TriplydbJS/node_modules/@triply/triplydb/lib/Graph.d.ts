/// <reference types="node" />
import { Models } from "@triply/utils";
import Dataset from "./Dataset";
import * as n3 from "n3";
import stream from "stream";
export declare const SUPPORTED_EXTENSIONS: readonly [".trig", ".nt", ".ttl", ".trig.gz", ".nt.gz", ".ttl.gz"];
export default class Graph {
    private _info;
    private _app;
    private _dataset;
    constructor(dataset: Dataset, info: Models.Graph);
    toFile(destinationPath: string, opts?: {
        compressed?: boolean;
    }): Promise<void>;
    toStore(): Promise<n3.Store>;
    toStream(type: "compressed" | "rdf-js"): Promise<stream.Readable>;
    getInfo(refresh?: boolean): Promise<Models.Graph>;
    private _getDownloadUrl;
    private _getPath;
    delete(): Promise<void>;
    rename(newGraphName: string): Promise<this>;
}
