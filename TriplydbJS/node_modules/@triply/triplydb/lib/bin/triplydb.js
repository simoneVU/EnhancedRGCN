#!/usr/bin/env node
"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const commander_1 = __importDefault(require("commander"));
const triplydb_import_from_file_1 = __importDefault(require("./triplydb-import-from-file"));
const triplydb_upload_asset_1 = __importDefault(require("./triplydb-upload-asset"));
const colors_1 = __importDefault(require("colors"));
const fs = __importStar(require("fs-extra"));
commander_1.default.usage("[command] [options] <files...>");
commander_1.default.addCommand(triplydb_import_from_file_1.default);
commander_1.default.addCommand(triplydb_upload_asset_1.default);
commander_1.default.parseAsync(process.argv).then(() => { }, (e) => {
    const errFile = ".triplydb-js.err";
    console.error(colors_1.default.red(e.message));
    console.error(colors_1.default.red("For more details, see " + errFile));
    fs.writeFileSync(errFile, JSON.stringify(e, Object.getOwnPropertyNames(e), 2));
    process.exit(1);
});
//# sourceMappingURL=triplydb.js.map