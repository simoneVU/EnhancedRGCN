"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getErr = exports.TriplyDbJsError = exports.IncompatibleError = void 0;
class IncompatibleError extends Error {
}
exports.IncompatibleError = IncompatibleError;
class TriplyDbJsError extends Error {
    constructor() {
        super(...arguments);
        this.context = {};
    }
    setMessage(msg) {
        this.message = msg;
        return this;
    }
    addContext(data) {
        this.context = Object.assign(Object.assign({}, this.context), data);
        return this;
    }
    setCause(error, jsonResult) {
        if (error instanceof Error) {
            this.message = `${this.message} (${error.message})`;
        }
        else {
            this.message = `${this.message} (${error.status}: ${jsonResult && jsonResult.message ? jsonResult.message : error.statusText})`;
        }
        return this;
    }
}
exports.TriplyDbJsError = TriplyDbJsError;
function getErr(message) {
    var _a;
    const err = new TriplyDbJsError(message);
    (_a = Error.captureStackTrace) === null || _a === void 0 ? void 0 : _a.call(Error, err, getErr);
    return err;
}
exports.getErr = getErr;
//# sourceMappingURL=Error.js.map