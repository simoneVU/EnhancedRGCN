import { Models } from "@triply/utils";
import App from "./App";
import { Account } from "./Account";
import AsyncIteratorHelper from "./utils/AsyncIteratorHelper";
import * as n3 from "n3";
import AsyncIteratorHelperWithToFile from "./utils/AsyncIteratorHelperWithToFile";
export default class Query {
    private _app;
    private _info;
    private _owner;
    constructor(app: App, info: Models.Query, owner: Account);
    private _getQueryType;
    private _getPath;
    private _getQueryNameWithOwner;
    getInfo(refresh?: boolean): Promise<Models.Query>;
    private _setInfo;
    update(config: Models.QueryMetaUpdate): Promise<this>;
    delete(): Promise<void>;
    results(variableValues?: {
        [variable: string]: string;
    }): {
        statements: () => AsyncIteratorHelperWithToFile<n3.Quad, n3.Quad>;
        bindings: () => AsyncIteratorHelper<{
            [key: string]: string;
        }, {
            [key: string]: string;
        }>;
    };
}
